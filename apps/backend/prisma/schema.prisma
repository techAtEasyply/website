
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String           @id @default(uuid())
  email            String           @unique
  profilePicUrl    String?
  resume           Resume?          @relation(fields: [resumeId], references: [id])
  resumeId         String?          @unique
  tokens           Int              @default(4000)
  savedJobs        SavedJob[]
  interviewReports InterviewReport[]
  setting          Setting?         @relation(fields: [settingId], references: [id])
  settingId        String?          @unique
  createdAt        DateTime         @default(now())
  updatedAt        DateTime         @updatedAt
}

model Resume {
  id         String   @id @default(uuid())
  themeName  String
  data       Json
  user       User?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  resumeUrl  String // todo implement s3 signed url @surya
}

model SavedJob {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  jobId     String
  jobTitle  String
  company   String
  savedAt   DateTime @default(now())
}

model InterviewReport {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  feedback  Json?
  rating    Int?
  createdAt DateTime @default(now())
}

model Setting {
  id          String   @id @default(uuid())
  user        User?
  darkMode    Boolean  @default(false)
  notificationsEnabled Boolean @default(true)
  language    String   @default("en")
  updatedAt   DateTime @updatedAt
}



enum SubscriptionType {
  FREE
  PREMIUM
}

enum InterviewType {
  DSA
  CS_FUNDAMENTALS
  DEVELOPMENT
  HR
  CUSTOM
}

enum Difficulty {
  EASY
  MEDIUM
  HARD
}

model Invite{
  id        String   @id @default(uuid())
  email     String   @unique
  createdAt DateTime @default(now())
  token     String   @unique
  used     Boolean  @default(false) 
}
